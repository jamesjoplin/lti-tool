name: CI

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

      - name: Format check
        run: npm run format

      - name: Build packages
        run: npm run build

  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npx vitest run --coverage --reporter=verbose

      # TODO: Enable when repository is made public
      # - name: Upload coverage to Codecov
      #   if: matrix.node-version == 22
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage/lcov.info
      #     fail_ci_if_error: true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [quality, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run integration tests
        run: npx vitest run packages/*/test/*.integration.test.ts

  security:
    name: Security Scan
    if: github.repository_owner == 'lti-tool'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run npm audit
        run: npm audit --audit-level=high

  ci:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [quality, test, integration, security]
    if: always() && github.repository_owner == 'lti-tool'
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.quality.result }}" == "success" &&
                "${{ needs.test.result }}" == "success" &&
                "${{ needs.integration.result }}" == "success" &&
                "${{ needs.security.result }}" == "success" ]]; then
            echo "All CI jobs passed"
          else
            echo "Some CI jobs failed"
            exit 1
          fi
